version: '3'
services:

  von-mara:
    build:
      context: ../data-pipeline
      dockerfile: docker/mara-app/Dockerfile
    environment:
      - VONX_API_URL=${VONX_API_URL:-http://von-agent:8000/bcreg}
      # TODO setup access to source database
      # [bc_registries]
      #- BC_REG_DB_HOST=${BC_REG_DB_HOST:-host.docker.internal}
      #- BC_REG_DB_PORT=${BC_REG_DB_PORT:-5454}
      #- BC_REG_DB_DATABASE=${BC_REG_DB_DATABASE:-BC_REGISTRIES}
      #- BC_REG_DB_USER=${BC_REG_DB_USER}
      #- BC_REG_DB_PASSWORD=${BC_REG_DB_PASSWORD}
      # [event_processor]
      - EVENT_PROC_DB_HOST=${EVENT_PROC_DB_HOST:-von-pipeline-db}
      - EVENT_PROC_DB_PORT=${EVENT_PROC_DB_PORT:-5432}
      - EVENT_PROC_DB_DATABASE=${EVENT_PROC_DB_DATABASE:-bc_reg_db}
      - EVENT_PROC_DB_USER=${EVENT_PROC_DB_USER:-bc_reg_db}
      - EVENT_PROC_DB_PASSWORD=
      # [mara_db]
      - MARA_DB_HOST=${MARA_DB_HOST:-von-pipeline-db}
      - MARA_DB_PORT=${MARA_DB_PORT:-5432}
      - MARA_DB_DATABASE=${MARA_DB_DATABASE:-mara_db}
      - MARA_DB_USER=${MARA_DB_USER:-mara_db}
    networks:
      - myorg
    ports:
      - "5050:5000"
    depends_on:
      - von-pipeline-db
    entrypoint: >
      /bin/bash -c "
        echo sleeping ...;
        sleep 5;
        ./docker-entrypoint.sh;"

  von-pipeline-db:
    build:
      context: ../data-pipeline
      dockerfile: docker/postgres/Dockerfile
    environment:
      - POSTGRESQL_USER=${POSTGRESQL_USER}
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_DATABASE=${POSTGRESQL_DATABASE}
    networks:
      - myorg
    ports:
      #- 5432:5432
      - 5444:5432
    volumes:
      - mara-data:/var/lib/pgsql/data

volumes:
  mara-data:

networks:
  myorg:
    external:
      name: myorg_myorg
#  orgbook:
#    external:
#      name: tob_tob


